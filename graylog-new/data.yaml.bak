apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: elastic6
    meta.helm.sh/release-namespace: graylog
  creationTimestamp: "2021-10-14T02:42:44Z"
  generation: 2
  labels:
    app: elasticsearch
    app.kubernetes.io/managed-by: Helm
    chart: elasticsearch-1.32.2
    component: data
    heritage: Helm
    release: elastic6
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/managed-by: {}
          f:chart: {}
          f:component: {}
          f:heritage: {}
          f:release: {}
      f:spec:
        f:podManagementPolicy: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:serviceName: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:component: {}
              f:release: {}
              f:role: {}
          f:spec:
            f:affinity:
              .: {}
              f:podAntiAffinity:
                .: {}
                f:preferredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"elasticsearch"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"DISCOVERY_SERVICE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ES_JAVA_OPTS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"MINIMUM_MASTER_NODES"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"NODE_MASTER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PROCESSORS"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:resourceFieldRef:
                        .: {}
                        f:divisor: {}
                        f:resource: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:lifecycle:
                  .: {}
                  f:postStart:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                  f:preStop:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":9300,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/data-post-start-hook.sh"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/data-pre-stop-hook.sh"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/usr/share/elasticsearch/config/elasticsearch.yml"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
                  k:{"mountPath":"/usr/share/elasticsearch/data"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:initContainers:
              .: {}
              k:{"name":"chown"}:
                .: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:runAsUser: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/usr/share/elasticsearch/data"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"sysctl"}:
                .: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext:
              .: {}
              f:fsGroup: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
        f:updateStrategy:
          f:type: {}
        f:volumeClaimTemplates: {}
    manager: Go-http-client
    operation: Update
    time: "2021-10-14T02:42:44Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:collisionCount: {}
        f:currentRevision: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updateRevision: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-10-20T03:44:19Z"
  name: elastic6-elasticsearch-data
  namespace: graylog
  resourceVersion: "25745104"
  selfLink: /apis/apps/v1/namespaces/graylog/statefulsets/elastic6-elasticsearch-data
  uid: 3273fb19-9357-4d1f-b5a1-c096447cc528
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: elasticsearch
      component: data
      release: elastic6
      role: data
  serviceName: elastic6-elasticsearch-data
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: elasticsearch
        component: data
        release: elastic6
        role: data
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: elasticsearch
                  component: data
                  release: elastic6
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: DISCOVERY_SERVICE
          value: elastic6-elasticsearch-discovery
        - name: NODE_MASTER
          value: "false"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              divisor: "0"
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: '-Djava.net.preferIPv4Stack=true -Xms1536m -Xmx1536m  '
        - name: MINIMUM_MASTER_NODES
          value: "2"
        image: 100.65.34.29:8082/docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - /data-post-start-hook.sh
          preStop:
            exec:
              command:
              - /bin/bash
              - /data-pre-stop-hook.sh
        name: elasticsearch
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "10"
          requests:
            cpu: 25m
            memory: 1536Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        - mountPath: /data-pre-stop-hook.sh
          name: config
          subPath: data-pre-stop-hook.sh
        - mountPath: /data-post-start-hook.sh
          name: config
          subPath: data-post-start-hook.sh
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: 100.65.34.29:8082/busybox:latest
        imagePullPolicy: IfNotPresent
        name: sysctl
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /bin/bash
        - -c
        - |
          set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
            chown -R elasticsearch:elasticsearch $datadir;
          done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
            chown -R elasticsearch:elasticsearch $logfile;
          done
        image: 100.65.34.29:8082/docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
        imagePullPolicy: IfNotPresent
        name: chown
        resources: {}
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      serviceAccount: elastic6-elasticsearch-data
      serviceAccountName: elastic6-elasticsearch-data
      terminationGracePeriodSeconds: 3600
      volumes:
      - configMap:
          defaultMode: 420
          name: elastic6-elasticsearch
        name: config
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 492Gi
      storageClassName: fast-disks
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  collisionCount: 0
  currentRevision: elastic6-elasticsearch-data-74fc8c9b7c
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updateRevision: elastic6-elasticsearch-data-54bd77b597
